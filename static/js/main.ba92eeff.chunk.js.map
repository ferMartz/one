{"version":3,"sources":["serviceWorker.js","views/home.js","routes/index.js","views/about.js","assets/theme.js","components/header.js","index.js"],"names":["Boolean","window","location","hostname","match","withStyles","root","flexGrow","container","margin","maxWidth","padding","_ref","classes","react_default","a","createElement","className","Typography_default","align","variant","children","gutterBottom","data","map","item","index","key","id","indexRoutes","path","name","component","Home","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","typography","useNextVariants","grow","menuButton","marginLeft","marginRight","button","spacing","unit","AppBar_default","position","Toolbar_default","IconButton_default","Link","to","color","aria-label","Home_default","Button_default","hist","createBrowserHistory","ReactDOM","render","styles","Fragment","CssBaseline_default","Router","history","header","Switch","prop","Route","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba92eeff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport data from '../db.json'\n\nconst styles = {\n        root : {\n            flexGrow: 1,\n        },\n        container : {\n            margin : '64px auto',\n            maxWidth : '1280px',\n            padding : '2%'            \n        }\n    }\n\n\nconst Home = ({classes}) => {\n    \n    return (\n         <div className={classes.root}>\n           \n                <div className={classes.container}>\n                    <Typography align='center' variant='h3' children='Material React Starter' gutterBottom />\n                    {\n                        data.map((item,index) => {\n                            return <Typography variant=\"overline\" key={index} children={item.id} gutterBottom /> \n                        })\n                    }\n                </div>            \n        </div>\n    )   \n}\n \nexport default withStyles(styles)(Home)","import Home from '../views/home'\nimport About from '../views/about'\n\nvar indexRoutes = [\n    { path: '/about', name: 'About', component: About },\n    { path: '/', name: 'Home', component: Home }\n]\n\nexport default indexRoutes","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n// import data from '../db.json'\n\nconst styles = {\n        root : {\n            margin : '5%'\n        }\n    }\n\n\nconst About = ({classes}) => {\n    \n    return (\n         <div className={classes.root}>\n            <Typography variant='h3' children='About page' gutterBottom />\n            \n        </div>\n    )   \n}\n \nexport default withStyles(styles)(About)","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme( \n    {\n        palette: {\n            common : \n                {\n                    black : \"#000\",\n                    white : \"#fff\"\n                },\n            background : \n                {\n                    paper : \"rgba(250, 250, 250, 1)\",\n                    default : \"rgba(255, 255, 255, 1)\"\n                },\n            primary : \n                {\n                    light : \"rgba(79, 91, 98, 1)\",\n                    main : \"rgba(38, 50, 56, 1)\",\n                    dark : \"rgba(0, 10, 18, 1)\",\n                    contrastText : \"#fff\"\n                },\n            secondary : \n                {\n                    light : \"rgba(98, 235, 255, 1)\",\n                    main : \"rgba(0, 184, 212, 1)\",\n                    dark : \"rgba(0, 136, 163, 1)\",\n                    contrastText : \"#fff\"\n                },\n            error : \n                {\n                    light : \"#e57373\",\n                    main : \"rgba(244, 67, 54, 1)\",\n                    dark : \"#d32f2f\",\n                    contrastText : \"#fff\"\n                },\n            text : \n                {\n                    primary : \"rgba(0, 0, 0, 0.87)\",\n                    secondary :  \"rgba(0, 0, 0, 0.54)\",\n                    disabled : \"rgba(0, 0, 0, 0.38)\",\n                    hint : \"rgba(0, 0, 0, 0.38)\"\n                }\n        },\n        typography: {\n            useNextVariants: true,\n        },\n    }\n\n)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport { theme } from '../assets/theme'\n\nconst styles = theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    button : {\n        margin : theme.spacing.unit\n    }\n\n})\n\nconst Header = ({classes}) => {\n    return (\n        <AppBar position='static'>\n            <Toolbar>\n            <IconButton component={Link} to='/' className={classes.menuButton} color='inherit' aria-label='Menu'>\n                <HomeIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit' className={classes.grow}>\n                \n            </Typography>\n            <Button component={Link} to='/about' color='inherit'>About</Button>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default withStyles(styles)(Header)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { createBrowserHistory } from 'history'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport indexRoutes from './routes'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { theme } from './assets/theme'\nimport Header from './components/header'\n\n\nconst hist = createBrowserHistory()\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <React.Fragment>\n            <CssBaseline />            \n            <Router history={hist}>\n                <div>\n                    <Header />\n                    <Switch>\n                        \n                        {\n                            indexRoutes.map((prop,key) => {\n                                return <Route path={prop.path} key={key} component={prop.component} />\n                            })\n                        }\n                    </Switch>\n                </div>\n            </Router>\n        </React.Fragment>        \n    </MuiThemeProvider>,\ndocument.getElementById('root')\n)\n\n\nserviceWorker.unregister()\n"],"sourceRoot":""}